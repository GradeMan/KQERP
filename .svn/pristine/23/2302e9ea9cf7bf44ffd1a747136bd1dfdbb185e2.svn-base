using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using ERP.Domain;
using ERP.Service;
using COM.Winform;
using COM.Service;
using DevExpress.XtraTab;
using ERP.Winform.Properties;
using DevExpress.XtraEditors;
namespace ERP.Winform.CommonModule
{
    public partial class ProcessFlowEditForm : EditForm
    {
        private IProcessFlowService processFlowService = Unity.Instance.GetService<IProcessFlowService>();
        public ProcessFlowEditForm(ERP_C006_ProcessFlow tempData, IProcessFlowService processFlowService)
        {
            InitializeComponent();
            //this.processFlowService = processFlowService;
            this.eRPC006ProcessFlowBindingSource.DataSource = tempData;
            this.eRPC006ProcessFlowProcessBindingSource.DataSource = processFlowService.GetProcessFlowDetail(tempData.ProcessFlowCode);
        }
        protected override void OnSetLayoutItemStyle()
        {
            ERPHelper.Instance.ApplyBindingSettings(ItemForCompCode, ItemBindingType.Required);
            ERPHelper.Instance.ApplyBindingSettings(ItemForProcessFlowCode, ItemBindingType.Required);
            ERPHelper.Instance.ApplyBindingSettings(ItemForProcessFlowName, ItemBindingType.Required);
        }
        protected override void OnBtnCommand(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (e.Item.Caption == BtnCommandEnum.Save)
            {
                eRPC006ProcessFlowBindingSource.EndEdit();
                var TempData = eRPC006ProcessFlowBindingSource.DataSource as ERP_C006_ProcessFlow;
                var processDetailList = eRPC006ProcessFlowProcessBindingSource.DataSource as List<ERP_C006_ProcessFlow_Process>;
                processFlowService.Save(TempData, processDetailList);
                DialogResult = DialogResult.OK;
            }
            if (e.Item.Caption == BtnCommandEnum.Cancel)
                DialogResult = DialogResult.Cancel;
        }

        private void ProcessFlowEditForm_Load(object sender, EventArgs e)
        {
            CreateToolBar();
        }
        private void CreateToolBar()
        {
            XtraTabPage page = this.xtraTabControl1.SelectedTabPage;
            foreach (var contr in page.Controls)
            {
                if (contr is ToolStrip)
                    return;
            }
            ToolStrip toolStrip = new ToolStrip();
            ToolStripButton btnAdd = new ToolStripButton();
            btnAdd.Text = "新增明细";
            btnAdd.Image = (Image)Resources.ResourceManager.GetObject("edit_add");
            btnAdd.TextImageRelation = TextImageRelation.ImageAboveText;
            btnAdd.DisplayStyle = ToolStripItemDisplayStyle.ImageAndText;
            btnAdd.Click += new EventHandler(btnAdd_Click);
            toolStrip.Items.Add(btnAdd);
            ToolStripSeparator toolSep = new ToolStripSeparator();
            toolStrip.Items.Add(toolSep);
            ToolStripButton btnDel = new ToolStripButton();
            btnDel.Text = "删除明细";
            btnDel.Image = (Image)Resources.ResourceManager.GetObject("cancel");
            btnDel.DisplayStyle = ToolStripItemDisplayStyle.ImageAndText;
            btnDel.TextImageRelation = TextImageRelation.ImageAboveText;
            btnDel.Click += new EventHandler(btnDel_Click);
            toolStrip.Items.Add(btnDel);
            toolStrip.Dock = DockStyle.Top;
            toolStrip.BringToFront();
            page.Controls.Add(toolStrip);
        }
        void btnDel_Click(object sender, EventArgs e)
        {
            var temp = eRPC006ProcessFlowProcessBindingSource.Current as ERP_C006_ProcessFlow_Process;
            processFlowService.MarkDelProcessFlowDetail(temp.Id);
            eRPC006ProcessFlowProcessBindingSource.RemoveCurrent();
        }

        void btnAdd_Click(object sender, EventArgs e)
        {
            this.eRPC006ProcessFlowBindingSource.EndEdit();
            var tempData = this.eRPC006ProcessFlowBindingSource.DataSource as ERP_C006_ProcessFlow;
            // string jobNo = this.JobNoTextEdit.Text;
            if (string.IsNullOrWhiteSpace(tempData.ProcessFlowCode))
            {
                XtraMessageBox.Show("流程代号为空，请先输入流程代号");
                return;
            }
            eRPC006ProcessFlowProcessBindingSource.AddNew();
            var tempDetail = this.eRPC006ProcessFlowProcessBindingSource.Current as ERP_C006_ProcessFlow_Process;
            tempDetail.ProcessFlowCode = tempData.ProcessFlowCode;
        }
    }
}
