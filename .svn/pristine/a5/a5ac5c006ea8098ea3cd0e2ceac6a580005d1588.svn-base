<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ include file="..\EntityConfig.tt.txt"#>
<#@ include file="..\NewEntity.tt.txt"#>
<#@ output extension=".cshtml" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.Services.Client.dll" #>
<#@ assembly name="$(ProjectDir)..\..\COM.Net\COM.Domain\bin\Debug\COM.Domain.dll" #>
<#@ assembly name="$(ProjectDir)..\ERP.Domain\bin\Debug\ERP.Domain.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Linq.Expressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.Services.Common" #>
<#@ import namespace="COM.Domain" #>
<#@ import namespace="ERP.Domain" #>
<#var c = this.NewEntity();#>
@model <#=c.AppName#>.Domain.<#=c.EntityTypeName#>
@{
    Layout = "~/Default/Views/Shared/_EditLayout.cshtml";
    ViewBag.Title = "<#=c.Title#>详细信息";
    var operation = string.IsNullOrEmpty(ViewBag.Operation) ? ViewContext.RouteData.Values["action"].ToString() : ViewBag.Operation;
}

@section js
{
    <script type="text/javascript">
         $(function () {
            bindButtonEvent();
            if(@((operation == COM.Web.EnumOperation.ReadOnly).ToString().ToLower()))
                readonlyStyle();
            else if(@((operation == COM.Web.EnumOperation.Create).ToString().ToLower()))
                createStyle();
            else if(@((operation == COM.Web.EnumOperation.Update).ToString().ToLower()))
                updateStyle("<#=c.KeyName#>");
        });

        function readonlyStyle()
        {
            $(".eidtDiv").addClass("readonly");
            $("input","div.readonly").addClass("readonly");
            $("input","div.readonly").attr("readonly","readonly");
            $("textarea","div.readonly").addClass("readonly");
            $("textarea","div.readonly").attr("readonly","readonly");
            $("a.operate", "div.operateDiv").css("display","none");
        };

        function createStyle()
        {
            editStyle();
            $("a#deleteButton", "div.operateDiv").css("display","none");
        };

        function editStyle()
        {
            $("a.operate", "div.operateDiv").button();
        };

        function updateStyle(keyColumn)
        {
            editStyle();
            $("#"+keyColumn).attr("readonly","readonly");
            $("#"+keyColumn).addClass("readonly");
        };

        function bindButtonEvent()
        {
            $("#saveButton").click(function(){
                var postUrl = $(this).attr("href");
                $.ajax({
                    type: "post",
                    url: postUrl,
                    data:$("form").serialize(),
                    success: function (result) {
                        window.location.href = "@Url.Content("~/<#=c.ModuleName#>/<#=c.EntityTypeName#>/List")";
                        }
                    });
                return false;
            });

           $("#deleteButton").click(function(){
                var postUrl = $(this).attr("href");
                $("#okCancelDialog").dialog({
                    width:300,
                    modal:true,
                    buttons:{"确认":function(){
                                $.ajax({
                                type: "post",
                                url: postUrl,
                                success: function (result) {
                                            $("#okCancelDialog").dialog('close');
                                            alert("删除成功!");
                                            window.location.href = "@Url.Content("~/<#=c.ModuleName#>/<#=c.EntityTypeName#>/List")";
                                        }
                                });
                            },
                            "取消":function(){
                                    $("#okCancelDialog").dialog('close');
                                  }
                            }
                });
             return false;

            });
        };

    </script>    
}


<h2><#=c.Title#>:@Html.DisplayTextFor(model => model.<#=c.KeyName#>)</h2>

<div class="eidtDiv pBoxDiv">
@using (Html.BeginForm())
{
        <span class="header"><#=c.Title#></span>
        <ul>
            
			<#foreach(var prop in c.EntityType.GetProperties())
			{#><#
				var attribute = prop.GetCustomAttributes(typeof(ColumnMapAttribute), false).FirstOrDefault();
				var colName = attribute == null?prop.Name:((ColumnMapAttribute)attribute).ColumnReamrk;
				#>
	<li class="column">
					<div class="column">
						<span class="label"><#=colName#></span>
						@Html.EditorFor(i => i.<#=prop.Name#>)
					</div>
				</li>
			<#}#>

        </ul>
        <div class="operateDiv pBoxDiv">
            <a id="saveButton" class="operate" href="@(Url.Content("~/<#=c.ModuleName#>/<#=c.EntityTypeName#>/") + operation)">保存</a>
            <a id="deleteButton" class="operate" href="@(Url.Content("~/<#=c.ModuleName#>/<#=c.EntityTypeName#>/Delete/") + Model.<#=c.KeyName#>)">删除</a>
        </div>
}
</div>

<div id="okCancelDialog" title="删除" style="display:none;">
    <span>是否删除?</span>
</div>


<div style="margin-top:20px;">
    @Html.ActionLink("返回列表", "List")
</div>
