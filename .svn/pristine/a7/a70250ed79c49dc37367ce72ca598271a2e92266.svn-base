using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using COM.Winform;
using ERP.Service;
using COM.Service;
using ERP.Domain;

namespace ERP.Winform.Product
{
    public partial class ProductForm : ListForm
    {
        private IProductService productService = Unity.Instance.GetService<IProductService>();
        private ICodeService codeService = Unity.Instance.GetService<ICodeService>();
        public ProductForm()
        {
            InitializeComponent();
            this.gridView1.DoubleClick+=new EventHandler(gridView1_DoubleClick);
            this.gridView1.CustomDrawRowIndicator += new DevExpress.XtraGrid.Views.Grid.RowIndicatorCustomDrawEventHandler(ERPHelper.Instance.ykgridview_CustomDrawRowIndicator);
        }
        public override void InitData()
        {
            this.treeCodeType.DataSource = codeService.GetListByCodeID("ICA");
            
        }
        public override void OnBtnCommand(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            // MessageBox.Show(e.Item.Caption);
            //新增
            if (e.Item.Caption == BtnCommandEnum.Add)
            {
                eRPM001ProductBindingSource.AddNew();
                ERP_M001_Product temp = eRPM001ProductBindingSource.Current as ERP_M001_Product;
                temp.ItemType = treeCodeType.FocusedNode[treeColumnCode] == null ? treeCodeType.FocusedNode[treeColumnCode].ToString() : null;
                EditForm("产品资料新增", BtnCommandEnum.Add);
            }
            else if (e.Item.Caption == BtnCommandEnum.Edit)
            {
                EditForm("产品资料修改", BtnCommandEnum.Edit);
            }
            else if (e.Item.Caption == BtnCommandEnum.Delete)
            {
                if (ERPHelper.Instance.MessageDel())
                {
                    ERP_M001_Product temp = eRPM001ProductBindingSource.Current as ERP_M001_Product;
                    productService.Delete(temp.Id);
                    eRPM001ProductBindingSource.RemoveCurrent();
                }
            }
        }

        private void EditForm(string formText, string btnCommand)
        {
            ERP_M001_Product temp = eRPM001ProductBindingSource.Current as ERP_M001_Product;
            ProductEditForm edit = new ProductEditForm(temp);
            edit.Text = formText;
            edit.Tag = btnCommand;

            if (edit.ShowDialog() != DialogResult.OK)
            {
                eRPM001ProductBindingSource.CancelEdit();
            }
        }

        private void gridView1_DoubleClick(object sender, EventArgs e)
        {
            if (this.ButtonList.Where(i => i.Btn_Name == BtnCommandEnum.Edit).Count() > 0)
            {
                EditForm("产品资料查看", BtnCommandEnum.Watch);
            }
        }


        private void treeCodeType_FocusedNodeChanged(object sender, DevExpress.XtraTreeList.FocusedNodeChangedEventArgs e)
        {
            if (e.Node[treeColumnCode] != null)
            {
                var itemType = e.Node[treeColumnCode].ToString();
                this.eRPM001ProductBindingSource.DataSource = productService.GetListByItemType(itemType);
            }
        }
    }
}