using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using COM.Winform;
using ERP.Service;
using ERP.Domain;
using ERP.Winform.Properties;
using DevExpress.XtraTab;
using COM.Service;
using System.IO;
namespace ERP.Winform.Product
{
    public partial class ProductEditForm : EditForm
    {
        private IProductService productService = Unity.Instance.GetService<IProductService>();
        private ICodeService codeService = Unity.Instance.GetService<ICodeService>();
        private ERP_M001_Product tempData;
        public ProductEditForm(ERP_M001_Product tempData)
        {
            InitializeComponent();
            this.tempData = tempData;
        }
        protected override void InitData()
        {
            ERPHelper.Instance.SetGridLookUpEdit(StatusTextEdit, codeService.GetCodeDataByCodeId("IST"), 2);//状态
           // ERPHelper.Instance.SetGridLookUpEdit(SpecRowsTextEdit, codeService.GetCodeDataByCodeId("IPL"), 2);//排数
           // ERPHelper.Instance.SetGridLookUpEdit(SpecAlignHoleTextEdit, codeService.GetCodeDataByCodeId("IUS"), 2);//定位孔
            ERPHelper.Instance.SetGridLookUpEdit(ItemTypeTextEdit, codeService.GetCodeDataByCodeId("ICA"), 2);//产品类别
            ERPHelper.Instance.SetGridLookUpEdit(ItemShapeTextEdit, codeService.GetCodeDataByCodeId("ISH"), 2);//封装类别
            ERPHelper.Instance.SetGridLookUpEdit(PlatTypeTextEdit, codeService.GetCodeDataByCodeId("EPT"), 2);//电镀方式
            StatusTextEdit.EditValueChanging += new DevExpress.XtraEditors.Controls.ChangingEventHandler(StatusTextEdit_EditValueChanging);
            ItemTypeTextEdit.EditValueChanging += new DevExpress.XtraEditors.Controls.ChangingEventHandler(StatusTextEdit_EditValueChanging);
            ItemShapeTextEdit.EditValueChanging += new DevExpress.XtraEditors.Controls.ChangingEventHandler(StatusTextEdit_EditValueChanging);
            PlatTypeTextEdit.EditValueChanging += new DevExpress.XtraEditors.Controls.ChangingEventHandler(StatusTextEdit_EditValueChanging);
            eRPM001ProductBindingSource.DataSource = tempData;
            eRPM001ProductCustPackBindingSource.DataSource = productService.GetCustPackListByProdutCode(tempData.ItemCode);
            eRPM001ProductFileBindingSource.DataSource = productService.GetProductFileByProdutCode(tempData.ItemCode);
            eRPM001ProductMaterialBindingSource.DataSource = productService.GetMaterialByProdutCode(tempData.ItemCode);
            eRPM001ProductProcessFlowBindingSource.DataSource = productService.GetProcessFlowByProdutCode(tempData.ItemCode);
            eRPM001ProductProdInfoBindingSource.DataSource = productService.GetProdInfoByProdutCode(tempData.ItemCode);
        }

        void StatusTextEdit_EditValueChanging(object sender, DevExpress.XtraEditors.Controls.ChangingEventArgs e)
        {
            this.BeginInvoke(new System.Windows.Forms.MethodInvoker(delegate
            {
                ERPHelper.Instance.FilterLookup(sender);
            }));
        }
        protected override void OnSetLayoutItemStyle()
        {
            ERPHelper.Instance.ApplyBindingSettings(ItemForItemCode, ItemBindingType.Required);
            ERPHelper.Instance.ApplyBindingSettings(ItemForItemName, ItemBindingType.Required);
        }
        protected override void OnBtnCommand(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (e.Item.Caption == BtnCommandEnum.Save)
            {
                eRPM001ProductBindingSource.EndEdit();
                eRPM001ProductCustPackBindingSource.EndEdit();
                eRPM001ProductFileBindingSource.EndEdit();
                eRPM001ProductMaterialBindingSource.EndEdit();
                eRPM001ProductProcessFlowBindingSource.EndEdit();
                eRPM001ProductProdInfoBindingSource.EndEdit();
                var productData = eRPM001ProductBindingSource.DataSource as ERP_M001_Product;
                var custPackList = eRPM001ProductCustPackBindingSource.DataSource as List<ERP_M001_Product_CustPack>;
                var fileList = eRPM001ProductFileBindingSource.DataSource as List<ERP_M001_Product_File>;
                var materialList = eRPM001ProductMaterialBindingSource.DataSource as List<ERP_M001_Product_Material>;
                var processFlowList = eRPM001ProductProcessFlowBindingSource.DataSource as List<ERP_M001_Product_ProcessFlow>;
                var prodInfoList = eRPM001ProductProdInfoBindingSource.DataSource as List<ERP_M001_Product_ProdInfo>;
                productService.Save(productData, custPackList, fileList, materialList, processFlowList, prodInfoList);
                DialogResult = DialogResult.OK;
            }
            if (e.Item.Caption == BtnCommandEnum.Cancel)
                DialogResult = DialogResult.Cancel;
        }
        private void xtraTabControl1_SelectedPageChanged(object sender, TabPageChangedEventArgs e)
        {
            CreateToolBar();
        }
       /// <summary>
       /// 生成子项目工具栏
       /// </summary>
        private void CreateToolBar()
        {
            XtraTabPage page = this.xtraTabControl1.SelectedTabPage;
            foreach (var  contr in page.Controls)
            {
                if (contr is ToolStrip)
                    return;
            }
            ToolStrip toolStrip = new ToolStrip();
            ToolStripButton btnAdd = new ToolStripButton();
            btnAdd.Text = "新增明细";
            btnAdd.Image = (Image)Resources.ResourceManager.GetObject("edit_add");
            btnAdd.TextImageRelation = TextImageRelation.ImageAboveText;
            btnAdd.DisplayStyle = ToolStripItemDisplayStyle.ImageAndText;
            btnAdd.Click += new EventHandler(btnAdd_Click);
            toolStrip.Items.Add(btnAdd);
            ToolStripSeparator toolSep = new ToolStripSeparator();
            toolStrip.Items.Add(toolSep);
            ToolStripButton btnDel = new ToolStripButton();
            btnDel.Text = "删除明细";
            btnDel.Image = (Image)Resources.ResourceManager.GetObject("cancel");
            btnDel.DisplayStyle = ToolStripItemDisplayStyle.ImageAndText;
            btnDel.TextImageRelation = TextImageRelation.ImageAboveText;
            btnDel.Click += new EventHandler(btnDel_Click);
            toolStrip.Items.Add(btnDel);
            toolStrip.Dock = DockStyle.Top;
            toolStrip.BringToFront();
            page.Controls.Add(toolStrip);
        }
        /// <summary>
        /// 删除明细
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        void btnDel_Click(object sender, EventArgs e)
        {
           // XtraTabPage page = this.xtraTabControl1.SelectedTabPage;
            switch (this.xtraTabControl1.SelectedTabPageIndex)
            {
                case 0: 
                    if (ERPHelper.Instance.MessageDel())
                    {
                        var custPackData = eRPM001ProductCustPackBindingSource.Current as ERP_M001_Product_CustPack;
                        productService.DeleteCustPack(custPackData.Id);
                        eRPM001ProductCustPackBindingSource.RemoveCurrent();
                    }
                    break;
                case 1:
                    if (ERPHelper.Instance.MessageDel())
                    {
                        var fileData = eRPM001ProductFileBindingSource.Current as ERP_M001_Product_File;
                        productService.DeleteFile(fileData.Id);
                        eRPM001ProductFileBindingSource.RemoveCurrent();
                    }
                    break;
                case 2: 
                    if (ERPHelper.Instance.MessageDel())
                    {
                        var material = eRPM001ProductMaterialBindingSource.Current as ERP_M001_Product_Material;
                        productService.DeleteMaterial(material.Id);
                        eRPM001ProductMaterialBindingSource.RemoveCurrent();
                    }
                    break;
                case 3:
                    if (ERPHelper.Instance.MessageDel())
                    {
                        var processFlow = eRPM001ProductProcessFlowBindingSource.Current as ERP_M001_Product_ProcessFlow;
                        productService.DeleteProcessFlow(processFlow.Id);
                        eRPM001ProductProcessFlowBindingSource.RemoveCurrent();
                    }
                    break;
                case 4:
                    if (ERPHelper.Instance.MessageDel())
                    {
                        var prodInfo = eRPM001ProductProdInfoBindingSource.Current as ERP_M001_Product_ProdInfo;
                        productService.DeleteProdInfo(prodInfo.Id);
                        eRPM001ProductProdInfoBindingSource.RemoveCurrent();
                    }
                    break;
            }
        }
        /// <summary>
        /// 新增明细
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        void btnAdd_Click(object sender, EventArgs e)
        {
            if(ItemCodeTextEdit.Text.Trim()=="")
            {
                XtraMessageBox.Show("产品代号不能为空，请先输入产品代号");
                return;
            }
            XtraTabPage page = this.xtraTabControl1.SelectedTabPage;
            switch (this.xtraTabControl1.SelectedTabPageIndex)
            {
                case 0: eRPM001ProductCustPackBindingSource.AddNew();
                    var custPackData = eRPM001ProductCustPackBindingSource.Current as ERP_M001_Product_CustPack;
                    custPackData.ItemCode = ItemCodeTextEdit.Text.Trim();
                    PrudtctCustPackEditForm custPackEditForm = new PrudtctCustPackEditForm(custPackData);
                    custPackEditForm.Tag = BtnCommandEnum.Add;
                    custPackEditForm.Text = "产品客户信息新增";
                    if (custPackEditForm.ShowDialog() != DialogResult.OK)
                        eRPM001ProductCustPackBindingSource.CancelEdit();
                    break;
                case 1: eRPM001ProductFileBindingSource.AddNew();
                    var fileData = eRPM001ProductFileBindingSource.Current as ERP_M001_Product_File;
                    fileData.ItemCode = ItemCodeTextEdit.Text.Trim();
                    ProductFileEditForm fileEditForm = new ProductFileEditForm(fileData);
                    fileEditForm.Tag = BtnCommandEnum.Add;
                    if (fileEditForm.ShowDialog() != DialogResult.OK)
                        eRPM001ProductFileBindingSource.CancelEdit();
                    break;
                case 2: eRPM001ProductMaterialBindingSource.AddNew();
                    var material = eRPM001ProductMaterialBindingSource.Current as ERP_M001_Product_Material;
                    material.ItemCode = ItemCodeTextEdit.Text.Trim();
                    ProductMaterialEditForm materialEditForm = new ProductMaterialEditForm(material);
                    materialEditForm.Tag = BtnCommandEnum.Add;
                    materialEditForm.Text = "产品材料信息新增";
                    if (materialEditForm.ShowDialog() != DialogResult.OK)
                        eRPM001ProductMaterialBindingSource.CancelEdit();
                    break;
                case 3: eRPM001ProductProcessFlowBindingSource.AddNew();
                    var processFlow = eRPM001ProductProcessFlowBindingSource.Current as ERP_M001_Product_ProcessFlow;
                    processFlow.ItemCode = ItemCodeTextEdit.Text.Trim();
                    break;
                case 4: eRPM001ProductProdInfoBindingSource.AddNew();
                    var prodInfo = eRPM001ProductProdInfoBindingSource.Current as ERP_M001_Product_ProdInfo;
                    prodInfo.ItemCode = ItemCodeTextEdit.Text.Trim();
                    break;

            }
        }

        private void ProductEditForm_Load(object sender, EventArgs e)
        {
            CreateToolBar();
        }
        //打开文件
        private void repositoryItemHyperLinkEdit1_Click(object sender, EventArgs e)
        {
            var file = eRPM001ProductFileBindingSource.Current as ERP_M001_Product_File;
            if (file != null)
            {
                saveFileDialog1.FileName = file.DocName;
                saveFileDialog1.Filter = "|*." + file.DocType;//"文本文件(*.txt)|*.txt|所有文件(*.*)|*.*""*."+file2.Format;
                if (saveFileDialog1.ShowDialog() == DialogResult.OK)
                {
                    Util.FileStreamHelp.BytesToFile(file.Content, saveFileDialog1.FileName);
                    if (XtraMessageBox.Show("文件已下载，是否打开？", "系统提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.OK)
                    {
                        System.Diagnostics.Process.Start(saveFileDialog1.FileName);
                    }
                }
                
            }
        }

        private void pictureItemPic_EditValueChanged(object sender, EventArgs e)
        {
            //var productData = eRPM001ProductBindingSource.DataSource as ERP_M001_Product;
            //productData.ItemPic  = ERPHelper.Instance.ImageToBuffer(this.pictureItemPic.Image);
        }
    }
}